---
jobs:
- name: deploy-aws-broker-development
  plan:
  - in_parallel:
    - get: aws-broker-app
      resource: aws-broker-app-development
      trigger: true
    - get: pipeline-tasks
  - task: run_tests
    file: aws-broker-app/ci/run_tests.yml

  - task: provision-rds
    tags:
    - iaas
    file: pipeline-tasks/terraform-apply.yml
    input_mapping:
      terraform-templates: aws-broker-app
    params:
      TERRAFORM_ACTION: apply
      TEMPLATE_SUBDIR: ci/terraform
      STACK_NAME: ((development-stack-name))
      S3_TFSTATE_BUCKET: ((development-s3-tfstate-bucket))
      AWS_DEFAULT_REGION: us-gov-west-1
      
      TF_VAR_base_stack: ((development-stack-base))
      TF_VAR_stack_description: ((development-stack-name))
      TF_VAR_remote_state_bucket: ((development-s3-tfstate-bucket))

      TF_VAR_aws_deploy_region: ((development-aws-default-region))
      TF_VAR_aws_deploy_role_arn: ((development-aws-deploy-role-arn))

      TF_VAR_rds_internal_instance_type: db.t3.micro
      TF_VAR_rds_internal_db_size: 10
      TF_VAR_rds_internal_db_name: ((development-rds-internal-db-name))
      TF_VAR_rds_internal_db_engine: postgres
      TF_VAR_rds_internal_db_engine_version: 12
      TF_VAR_rds_internal_db_parameter_group_family: postgres12
      TF_VAR_rds_internal_multi_az: false
      TF_VAR_rds_internal_username: ((development-rds-internal-username))
      TF_VAR_rds_internal_password: ((development-rds-internal-password))
      TF_VAR_rds_internal_apply_immediately: "true"
      TF_VAR_rds_internal_allow_major_version_upgrade: "true"

      TF_VAR_rds_shared_mysql_instance_type: db.t3.small
      TF_VAR_rds_shared_mysql_db_size: 100
      TF_VAR_rds_shared_mysql_db_name: ((development-rds-shared-mysql-db-name))
      TF_VAR_rds_shared_mysql_db_engine: mysql
      TF_VAR_rds_shared_mysql_db_engine_version: 5.7.33
      TF_VAR_rds_shared_mysql_db_parameter_group_family: mysql5.7
      TF_VAR_rds_shared_mysql_multi_az: false
      TF_VAR_rds_shared_mysql_username: ((development-rds-shared-mysql-username))
      TF_VAR_rds_shared_mysql_password: ((development-rds-shared-mysql-password))
      TF_VAR_rds_shared_mysql_apply_immediately: "true"
      TF_VAR_rds_shared_mysql_allow_major_version_upgrade: "true"

      TF_VAR_rds_shared_postgres_instance_type: db.t3.micro
      TF_VAR_rds_shared_postgres_db_size: 100
      TF_VAR_rds_shared_postgres_db_name: ((development-rds-shared-postgres-db-name))
      TF_VAR_rds_shared_postgres_db_engine: postgres
      TF_VAR_rds_shared_postgres_db_engine_version: 12
      TF_VAR_rds_shared_postgres_db_parameter_group_family: postgres12
      TF_VAR_rds_shared_postgres_multi_az: false
      TF_VAR_rds_shared_postgres_username: ((development-rds-shared-postgres-username))
      TF_VAR_rds_shared_postgres_password: ((development-rds-shared-postgres-password))
      TF_VAR_rds_shared_postgres_apply_immediately: "true"
      TF_VAR_rds_shared_postgres_allow_major_version_upgrade: "true"

      TF_VAR_snapshot_expiration: 1
      TF_VAR_platform_access_role_arn: ((development-platform-role-arn))

  - task: init-shared-db
    file: aws-broker-app/ci/init-shared-db.yml
    params:
      STATE_FILE: terraform-state/terraform.tfstate
      POSTGRES_USERNAME: ((development-rds-shared-postgres-username))
      POSTGRES_PASSWORD: ((development-rds-shared-postgres-password))

  - task: build-manifest
    file: aws-broker-app/ci/build-manifest.yml
    params:
      S3_TFSTATE_BUCKET: ((development-s3-tfstate-bucket))
      BASE_STACK_NAME: ((development-stack-base))
      AWS_DEFAULT_REGION: us-gov-west-1
      STATE_FILE: terraform-state/terraform.tfstate
      ENVIRONMENT: ((development-environment))
      RDS_SHARED_MYSQL_NAME: ((development-rds-shared-mysql-db-name))
      RDS_SHARED_MYSQL_USERNAME: ((development-rds-shared-mysql-username))
      RDS_SHARED_MYSQL_PASSWORD: ((development-rds-shared-mysql-password))
      RDS_SHARED_POSTGRES_NAME: ((development-rds-shared-postgres-db-name))
      RDS_SHARED_POSTGRES_USERNAME: ((development-rds-shared-postgres-username))
      RDS_SHARED_POSTGRES_PASSWORD: ((development-rds-shared-postgres-password))

  - put: deploy-aws-broker-development
    params:
      manifest: built/manifest.yml
      path: built
      current_app_name: aws-broker
      environment_variables:
        DB_PREFIX: ((development-db-name-prefix))
        DB_SHORTHAND_PREFIX: dev
        AUTH_PASS: ((development-auth-pass))
        AUTH_USER: ((development-auth-user))
        AWS_DEFAULT_REGION: ((development-aws-default-region))
        DB_SSLMODE: require
        DB_USER: ((development-rds-internal-username))
        DB_PASS: ((development-rds-internal-password))
        DB_TYPE: postgres
        DB_NAME: ((development-rds-internal-db-name))
        ENC_KEY: ((development-enc-key))

    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy aws-broker on development
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: '#cg-platform-news'
        username: ((slack-username))
        icon_url: ((slack-icon-url))
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed aws-broker on development
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: '#cg-platform-news'
        username: ((slack-username))
        icon_url: ((slack-icon-url))

  - task: update-broker
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((development-cf-api-url))
      CF_USERNAME: ((development-cf-deploy-username))
      CF_PASSWORD: ((development-cf-deploy-password))
      CF_ORGANIZATION: ((development-cf-organization))
      CF_SPACE: ((development-cf-space))
      BROKER_NAME: ((development-broker-name))
      AUTH_USER: ((development-auth-user))
      AUTH_PASS: ((development-auth-pass))
      SERVICES: aws-rds:micro-psql aws-rds:medium-psql aws-rds:medium-psql-redundant aws-rds:large-gp-psql aws-rds:large-gp-psql-redundant aws-rds:xlarge-gp-psql aws-rds:xlarge-gp-psql-redundant aws-rds:small-mysql aws-rds:medium-mysql aws-rds:medium-gp-mysql-redundant aws-rds:large-gp-mysql aws-rds:large-gp-mysql-redundant aws-rds:xlarge-gp-mysql aws-rds:xlarge-gp-mysql-redundant aws-rds:medium-mysql-redundant aws-rds:micro-psql-redundant aws-rds:small-mysql-redundant aws-rds:small-psql aws-rds:small-psql-redundant aws-rds:medium-oracle-se2 aws-elasticache-redis:redis-dev aws-elasticache-redis:redis-3node aws-elasticache-redis:redis-5node aws-elasticache-redis:redis-3node-large aws-elasticache-redis:redis-5node-large aws-elasticsearch:es-dev aws-elasticsearch:es-medium aws-elasticsearch:es-medium-ha aws-elasticsearch:es-large aws-elasticsearch:es-large-ha aws-elasticsearch:es-xlarge aws-elasticsearch:es-xlarge-ha

  - task: update-broker-enterprise
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((development-cf-api-url))
      CF_USERNAME: ((development-cf-deploy-username))
      CF_PASSWORD: ((development-cf-deploy-password))
      CF_ORGANIZATION: ((development-cf-organization))
      CF_SPACE: ((development-cf-space))
      BROKER_NAME: ((development-broker-name))
      AUTH_USER: ((development-auth-user))
      AUTH_PASS: ((development-auth-pass))
      SERVICES: aws-rds:large-gp-sqlserver-se aws-rds:2xlarge-gp-psql-redundant aws-rds:2xlarge-gp-psql aws-rds:xlarge-gp-psql-m6 aws-rds:xlarge-gp-psql-m6-redundant
      SERVICE_ORGANIZATION: cloud-gov

- name: acceptance-tests-development
  plan:
  - in_parallel:
    - get: aws-broker-app
      resource: aws-broker-app-development
      passed: [deploy-aws-broker-development]
      trigger: true
    - get: aws-db-test
  - in_parallel:
      steps:
      - task: smoke-tests-postgres
        file: aws-broker-app/ci/run-smoke-tests.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_PLAN: micro-psql
          DB_TYPE: postgres

      - task: smoke-tests-postgres-update-micro-to-small
        file: aws-broker-app/ci/run-smoke-tests-db-updates.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_PLAN: micro-psql
          NEW_SERVICE_PLAN: small-psql
          DB_TYPE: postgres

      - task: smoke-tests-postgres-version
        file: aws-broker-app/ci/run-smoke-tests-db-version.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_PLAN: micro-psql
          DB_TYPE: postgres
          DB_VERSION: 11

      - task: smoke-tests-postgres-update-storage
        file: aws-broker-app/ci/run-smoke-tests-update-storage.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_PLAN: micro-psql
          DB_TYPE: postgres

      - task: smoke-tests-mysql
        file: aws-broker-app/ci/run-smoke-tests.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_PLAN: small-mysql
          DB_TYPE: mysql

      - task: smoke-tests-mysql-update-small-to-medium
        file: aws-broker-app/ci/run-smoke-tests-db-updates.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_PLAN: small-mysql
          NEW_SERVICE_PLAN: medium-mysql
          DB_TYPE: mysql

      - task: smoke-tests-mysql-version
        file: aws-broker-app/ci/run-smoke-tests-db-version.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_PLAN: small-mysql
          DB_TYPE: mysql
          DB_VERSION: 5.7

      - task: smoke-tests-mysql-update-storage
        file: aws-broker-app/ci/run-smoke-tests-update-storage.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_PLAN: small-mysql
          DB_TYPE: mysql

      - task: smoke-tests-oracle
        file: aws-broker-app/ci/run-smoke-tests.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_PLAN: medium-oracle-se2
          DB_TYPE: oracle-se2

      - task: smoke-tests-redis
        file: aws-broker-app/ci/run-smoke-test-task.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_NAME: aws-elasticache-redis
          SERVICE_PLAN: redis-dev
          REGION: ((development-aws-default-region))

      - task: smoke-tests-unbound-elasticsearch
        file: aws-broker-app/ci/run-smoke-test-unbound.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_NAME: aws-elasticsearch
          SERVICE_PLAN: es-dev
          REGION: ((development-aws-default-region))

      - task: smoke-tests-elasticsearch
        file: aws-broker-app/ci/run-smoke-test-task.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_NAME: aws-elasticsearch
          SERVICE_PLAN: es-dev
          REGION: ((development-aws-default-region))

      - task: smoke-tests-elasticsearch-advanced-options
        file: aws-broker-app/ci/run-smoke-test-es-advanced-options.yml
        params:
          BROKER_NAME: ((development-broker-name))
          CF_API_URL: ((development-cf-api-url))
          CF_USERNAME: ((development-cf-deploy-username))
          CF_PASSWORD: ((development-cf-deploy-password))
          CF_ORGANIZATION: ((development-cf-organization))
          CF_SPACE: ((development-cf-space))
          SERVICE_NAME: aws-elasticsearch
          SERVICE_PLAN: es-dev
          REGION: ((development-aws-default-region))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Acceptance Tests for aws-broker on development PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Acceptance Tests for aws-broker on development FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-aws-broker-staging
  plan:
  - in_parallel:
    - get: aws-broker-app
      trigger: true
    - get: pipeline-tasks
  - task: run_tests
    file: aws-broker-app/ci/run_tests.yml

  - task: provision-rds
    tags:
    - iaas
    file: pipeline-tasks/terraform-apply.yml
    input_mapping:
      terraform-templates: aws-broker-app
    params:
      TERRAFORM_ACTION: apply
      TEMPLATE_SUBDIR: ci/terraform
      STACK_NAME: ((staging-stack-name))
      S3_TFSTATE_BUCKET: ((staging-s3-tfstate-bucket))
      AWS_DEFAULT_REGION: us-gov-west-1
      
      TF_VAR_base_stack: ((staging-stack-base))
      TF_VAR_stack_description: ((staging-stack-name))
      TF_VAR_remote_state_bucket: ((staging-s3-tfstate-bucket))

      TF_VAR_aws_deploy_region: ((staging-aws-default-region))
      TF_VAR_aws_deploy_role_arn: ((staging-aws-deploy-role-arn))

      TF_VAR_rds_internal_instance_type: ((prod-pgsql-instance-class))
      TF_VAR_rds_internal_db_size: 10
      TF_VAR_rds_internal_db_name: ((staging-rds-internal-db-name))
      TF_VAR_rds_internal_db_engine: postgres
      TF_VAR_rds_internal_db_engine_version: 12
      TF_VAR_rds_internal_db_parameter_group_family: postgres12
      TF_VAR_rds_internal_multi_az: false
      TF_VAR_rds_internal_username: ((staging-rds-internal-username))
      TF_VAR_rds_internal_password: ((staging-rds-internal-password))
      TF_VAR_rds_internal_apply_immediately: "true"
      TF_VAR_rds_internal_allow_major_version_upgrade: "true"

      TF_VAR_rds_shared_mysql_instance_type: ((prod-mysql-instance-class))
      TF_VAR_rds_shared_mysql_db_size: 100
      TF_VAR_rds_shared_mysql_db_name: ((staging-rds-shared-mysql-db-name))
      TF_VAR_rds_shared_mysql_db_engine: mysql
      TF_VAR_rds_shared_mysql_db_engine_version: 5.7.33
      TF_VAR_rds_shared_mysql_db_parameter_group_family: mysql5.7
      TF_VAR_rds_shared_mysql_multi_az: false
      TF_VAR_rds_shared_mysql_username: ((staging-rds-shared-mysql-username))
      TF_VAR_rds_shared_mysql_password: ((staging-rds-shared-mysql-password))
      TF_VAR_rds_shared_mysql_apply_immediately: "true"
      TF_VAR_rds_shared_mysql_allow_major_version_upgrade: "true"

      TF_VAR_rds_shared_postgres_instance_type: ((prod-pgsql-instance-class))
      TF_VAR_rds_shared_postgres_db_size: 100
      TF_VAR_rds_shared_postgres_db_name: ((staging-rds-shared-postgres-db-name))
      TF_VAR_rds_shared_postgres_db_engine: postgres
      TF_VAR_rds_shared_postgres_db_engine_version: 12
      TF_VAR_rds_shared_postgres_db_parameter_group_family: postgres12
      TF_VAR_rds_shared_postgres_multi_az: false
      TF_VAR_rds_shared_postgres_username: ((staging-rds-shared-postgres-username))
      TF_VAR_rds_shared_postgres_password: ((staging-rds-shared-postgres-password))
      TF_VAR_rds_shared_postgres_apply_immediately: "true"
      TF_VAR_rds_shared_postgres_allow_major_version_upgrade: "true"
      
      TF_VAR_snapshot_expiration: 7
      TF_VAR_platform_access_role_arn: ((staging-platform-role-arn))
      
  - task: init-shared-db
    file: aws-broker-app/ci/init-shared-db.yml
    params:
      STATE_FILE: terraform-state/terraform.tfstate
      POSTGRES_USERNAME: ((staging-rds-shared-postgres-username))
      POSTGRES_PASSWORD: ((staging-rds-shared-postgres-password))

  - task: build-manifest
    file: aws-broker-app/ci/build-manifest.yml
    params:
      S3_TFSTATE_BUCKET: ((staging-s3-tfstate-bucket))
      BASE_STACK_NAME: ((staging-stack-base))
      AWS_DEFAULT_REGION: us-gov-west-1
      STATE_FILE: terraform-state/terraform.tfstate
      ENVIRONMENT: ((staging-environment))
      RDS_SHARED_MYSQL_NAME: ((staging-rds-shared-mysql-db-name))
      RDS_SHARED_MYSQL_USERNAME: ((staging-rds-shared-mysql-username))
      RDS_SHARED_MYSQL_PASSWORD: ((staging-rds-shared-mysql-password))
      RDS_SHARED_POSTGRES_NAME: ((staging-rds-shared-postgres-db-name))
      RDS_SHARED_POSTGRES_USERNAME: ((staging-rds-shared-postgres-username))
      RDS_SHARED_POSTGRES_PASSWORD: ((staging-rds-shared-postgres-password))

  - put: deploy-aws-broker-staging
    params:
      manifest: built/manifest.yml
      path: built
      current_app_name: aws-broker
      environment_variables:
        DB_PREFIX: ((staging-db-name-prefix))
        DB_SHORTHAND_PREFIX: stg
        AUTH_PASS: ((staging-auth-pass))
        AUTH_USER: ((staging-auth-user))
        AWS_DEFAULT_REGION: ((staging-aws-default-region))
        DB_SSLMODE: require
        DB_USER: ((staging-rds-internal-username))
        DB_PASS: ((staging-rds-internal-password))
        DB_TYPE: postgres
        DB_NAME: ((staging-rds-internal-db-name))
        ENC_KEY: ((staging-enc-key))

    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy aws-broker on staging
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: '#cg-platform-news'
        username: ((slack-username))
        icon_url: ((slack-icon-url))
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed aws-broker on staging
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: '#cg-platform-news'
        username: ((slack-username))
        icon_url: ((slack-icon-url))

  - task: update-broker
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((staging-cf-api-url))
      CF_USERNAME: ((staging-cf-deploy-username))
      CF_PASSWORD: ((staging-cf-deploy-password))
      CF_ORGANIZATION: ((staging-cf-organization))
      CF_SPACE: ((staging-cf-space))
      BROKER_NAME: ((staging-broker-name))
      AUTH_USER: ((staging-auth-user))
      AUTH_PASS: ((staging-auth-pass))
      SERVICES: >-
        aws-rds:micro-psql
        aws-rds:medium-psql
        aws-rds:medium-psql-redundant
        aws-rds:large-gp-psql
        aws-rds:large-gp-psql-redundant
        aws-rds:xlarge-gp-psql
        aws-rds:xlarge-gp-psql-redundant
        aws-rds:small-mysql
        aws-rds:medium-mysql
        aws-rds:medium-gp-mysql-redundant
        aws-rds:large-gp-mysql
        aws-rds:large-gp-mysql-redundant
        aws-rds:xlarge-gp-mysql
        aws-rds:xlarge-gp-mysql-redundant
        aws-rds:medium-mysql-redundant
        aws-rds:micro-psql-redundant
        aws-rds:small-mysql-redundant
        aws-rds:small-psql
        aws-rds:small-psql-redundant
        aws-rds:medium-oracle-se2
        aws-elasticache-redis:redis-dev
        aws-elasticache-redis:redis-3node
        aws-elasticache-redis:redis-5node
        aws-elasticache-redis:redis-3node-large
        aws-elasticache-redis:redis-5node-large
        aws-elasticsearch:es-dev
        aws-elasticsearch:es-medium
        aws-elasticsearch:es-medium-ha
        aws-elasticsearch:es-large
        aws-elasticsearch:es-large-ha
        aws-elasticsearch:es-xlarge
        aws-elasticsearch:es-xlarge-ha

  - task: update-broker-enterprise
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((staging-cf-api-url))
      CF_USERNAME: ((staging-cf-deploy-username))
      CF_PASSWORD: ((staging-cf-deploy-password))
      CF_ORGANIZATION: ((staging-cf-organization))
      CF_SPACE: ((staging-cf-space))
      BROKER_NAME: ((staging-broker-name))
      AUTH_USER: ((staging-auth-user))
      AUTH_PASS: ((staging-auth-pass))
      SERVICES: aws-rds:large-gp-sqlserver-se aws-rds:2xlarge-gp-psql-redundant aws-rds:2xlarge-gp-psql aws-rds:xlarge-gp-psql-m6 aws-rds:xlarge-gp-psql-m6-redundant
      SERVICE_ORGANIZATION: cloud-gov

- name: acceptance-tests-staging
  plan:
  - in_parallel:
    - get: aws-broker-app
      passed: [deploy-aws-broker-staging]
      trigger: true
    - get: aws-db-test
  - in_parallel:
      steps:
      - task: smoke-tests-postgres
        file: aws-broker-app/ci/run-smoke-tests.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_PLAN: micro-psql
          DB_TYPE: postgres

      - task: smoke-tests-postgres-update-storage
        file: aws-broker-app/ci/run-smoke-tests-update-storage.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_PLAN: micro-psql
          NEW_SERVICE_PLAN: medium-psql
          DB_TYPE: postgres

      - task: smoke-tests-postgres-version
        file: aws-broker-app/ci/run-smoke-tests-db-version.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_PLAN: micro-psql
          DB_TYPE: postgres
          DB_VERSION: 11

      - task: smoke-tests-postgres-update-micro-to-small
        file: aws-broker-app/ci/run-smoke-tests-db-updates.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_PLAN: micro-psql
          NEW_SERVICE_PLAN: small-psql
          DB_TYPE: postgres

      - task: smoke-tests-mysql
        file: aws-broker-app/ci/run-smoke-tests.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_PLAN: small-mysql
          DB_TYPE: mysql

      - task: smoke-tests-mysql-update-storage
        file: aws-broker-app/ci/run-smoke-tests-update-storage.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_PLAN: small-mysql
          DB_TYPE: mysql

      - task: smoke-tests-mysql-version
        file: aws-broker-app/ci/run-smoke-tests-db-version.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_PLAN: small-mysql
          DB_TYPE: mysql
          DB_VERSION: 5.7

      - task: smoke-tests-mysql-update-small-to-medium
        file: aws-broker-app/ci/run-smoke-tests-db-updates.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_PLAN: small-mysql
          NEW_SERVICE_PLAN: medium-mysql
          DB_TYPE: mysql

      - task: smoke-tests-oracle
        file: aws-broker-app/ci/run-smoke-tests.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_PLAN: medium-oracle-se2
          DB_TYPE: oracle-se2

      - task: smoke-tests-redis
        file: aws-broker-app/ci/run-smoke-test-task.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_NAME: aws-elasticache-redis
          SERVICE_PLAN: redis-dev
          REGION: ((staging-aws-default-region))

      - task: smoke-tests-unbound-elasticsearch
        file: aws-broker-app/ci/run-smoke-test-unbound.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_NAME: aws-elasticsearch
          SERVICE_PLAN: es-dev
          REGION: ((staging-aws-default-region))

      - task: smoke-tests-elasticsearch
        file: aws-broker-app/ci/run-smoke-test-task.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_NAME: aws-elasticsearch
          SERVICE_PLAN: es-dev
          REGION: ((staging-aws-default-region))

      - task: smoke-tests-elasticsearch-advanced-options
        file: aws-broker-app/ci/run-smoke-test-es-advanced-options.yml
        params:
          BROKER_NAME: ((staging-broker-name))
          CF_API_URL: ((staging-cf-api-url))
          CF_USERNAME: ((staging-cf-deploy-username))
          CF_PASSWORD: ((staging-cf-deploy-password))
          CF_ORGANIZATION: ((staging-cf-organization))
          CF_SPACE: ((staging-cf-space))
          SERVICE_NAME: aws-elasticsearch
          SERVICE_PLAN: es-dev
          REGION: ((staging-aws-default-region))
  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Acceptance Tests for aws-broker on staging PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Acceptance Tests for aws-broker on staging FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: terraform-plan-aws-broker-prod
  plan:
  - in_parallel:
    - get: aws-broker-app
      passed: [acceptance-tests-staging]
      trigger: true
    - get: pipeline-tasks
      trigger: true

  - task: terraform-plan
    tags:
    - iaas
    file: pipeline-tasks/terraform-apply.yml
    input_mapping:
      terraform-templates: aws-broker-app
    params: &plan-params
      TERRAFORM_ACTION: plan
      TEMPLATE_SUBDIR: ci/terraform
      STACK_NAME: ((prod-stack-name))
      S3_TFSTATE_BUCKET: ((prod-s3-tfstate-bucket))
      AWS_DEFAULT_REGION: us-gov-west-1

      TF_VAR_base_stack: ((prod-stack-base))
      TF_VAR_stack_description: ((prod-stack-name))
      TF_VAR_remote_state_bucket: ((prod-s3-tfstate-bucket))

      TF_VAR_aws_deploy_region: ((prod-aws-default-region))
      TF_VAR_aws_deploy_role_arn: ((prod-aws-deploy-role-arn))

      TF_VAR_rds_internal_instance_type: ((prod-pgsql-instance-class))
      TF_VAR_rds_internal_db_size: 10
      TF_VAR_rds_internal_db_name: ((prod-rds-internal-db-name))
      TF_VAR_rds_internal_db_engine: postgres
      TF_VAR_rds_internal_db_engine_version: 12
      TF_VAR_rds_internal_db_parameter_group_family: postgres12
      TF_VAR_rds_internal_multi_az: true
      TF_VAR_rds_internal_username: ((prod-rds-internal-username))
      TF_VAR_rds_internal_password: ((prod-rds-internal-password))
      TF_VAR_rds_internal_apply_immediately: "true"
      TF_VAR_rds_internal_allow_major_version_upgrade: "true"

      TF_VAR_rds_shared_mysql_instance_type: ((prod-mysql-instance-class))
      TF_VAR_rds_shared_mysql_db_size: 100
      TF_VAR_rds_shared_mysql_db_name: ((prod-rds-shared-mysql-db-name))
      TF_VAR_rds_shared_mysql_db_engine: mysql
      TF_VAR_rds_shared_mysql_db_engine_version: 5.7.33
      TF_VAR_rds_shared_mysql_db_parameter_group_family: mysql5.7
      TF_VAR_rds_shared_mysql_multi_az: true
      TF_VAR_rds_shared_mysql_username: ((prod-rds-shared-mysql-username))
      TF_VAR_rds_shared_mysql_password: ((prod-rds-shared-mysql-password))
      TF_VAR_rds_shared_mysql_apply_immediately: "true"
      TF_VAR_rds_shared_mysql_allow_major_version_upgrade: "true"

      TF_VAR_rds_shared_postgres_instance_type: db.m4.large #needs upgrade to new instance type
      TF_VAR_rds_shared_postgres_db_size: 100
      TF_VAR_rds_shared_postgres_db_name: ((prod-rds-shared-postgres-db-name))
      TF_VAR_rds_shared_postgres_db_engine: postgres
      TF_VAR_rds_shared_postgres_db_engine_version: 12
      TF_VAR_rds_shared_postgres_db_parameter_group_family: postgres12
      TF_VAR_rds_shared_postgres_multi_az: true
      TF_VAR_rds_shared_postgres_username: ((prod-rds-shared-postgres-username))
      TF_VAR_rds_shared_postgres_password: ((prod-rds-shared-postgres-password))
      TF_VAR_rds_shared_postgres_apply_immediately: "true"
      TF_VAR_rds_shared_postgres_allow_major_version_upgrade: "true"
      
      TF_VAR_snapshot_expiration: 14
      TF_VAR_platform_access_role_arn: ((prod-platform-role-arn))

  - put: slack
    params:
      text:  |
        :terraform: $BUILD_JOB_NAME needs review
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform'
      username: ((slack-username))
      icon_url: ((slack-icon-url))

- name: deploy-aws-broker-prod
  plan:
  - in_parallel:
    - get: aws-broker-app
      passed: [acceptance-tests-staging, terraform-plan-aws-broker-prod]
      # trigger: true
    - get: pipeline-tasks

  - task: provision-rds
    tags:
    - iaas
    file: pipeline-tasks/terraform-apply.yml
    input_mapping:
      terraform-templates: aws-broker-app
    params:
      <<: *plan-params
      TERRAFORM_ACTION: apply

  - task: init-shared-db
    file: aws-broker-app/ci/init-shared-db.yml
    params:
      STATE_FILE: terraform-state/terraform.tfstate
      POSTGRES_USERNAME: ((prod-rds-shared-postgres-username))
      POSTGRES_PASSWORD: ((prod-rds-shared-postgres-password))

  - task: build-manifest
    file: aws-broker-app/ci/build-manifest.yml
    params:
      S3_TFSTATE_BUCKET: ((prod-s3-tfstate-bucket))
      BASE_STACK_NAME: ((prod-stack-base))
      AWS_DEFAULT_REGION: us-gov-west-1
      STATE_FILE: terraform-state/terraform.tfstate
      ENVIRONMENT: ((prod-environment))
      RDS_SHARED_MYSQL_NAME: ((prod-rds-shared-mysql-db-name))
      RDS_SHARED_MYSQL_USERNAME: ((prod-rds-shared-mysql-username))
      RDS_SHARED_MYSQL_PASSWORD: ((prod-rds-shared-mysql-password))
      RDS_SHARED_POSTGRES_NAME: ((prod-rds-shared-postgres-db-name))
      RDS_SHARED_POSTGRES_USERNAME: ((prod-rds-shared-postgres-username))
      RDS_SHARED_POSTGRES_PASSWORD: ((prod-rds-shared-postgres-password))

  - put: deploy-aws-broker-prod
    params:
      manifest: built/manifest.yml
      path: built
      current_app_name: aws-broker
      environment_variables:
        DB_PREFIX: ((prod-db-name-prefix))
        DB_SHORTHAND_PREFIX: prd
        AUTH_PASS: ((prod-auth-pass))
        AUTH_USER: ((prod-auth-user))
        AWS_DEFAULT_REGION: ((prod-aws-default-region))
        DB_SSLMODE: require
        DB_USER: ((prod-rds-internal-username))
        DB_PASS: ((prod-rds-internal-password))
        DB_TYPE: postgres
        DB_NAME: ((prod-rds-internal-db-name))
        ENC_KEY: ((prod-enc-key))

    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy aws-broker on production
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: '#cg-platform'
        username: ((slack-username))
        icon_url: ((slack-icon-url))
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed aws-broker on production
          <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: '#cg-platform-news'
        username: ((slack-username))
        icon_url: ((slack-icon-url))

  - task: update-broker
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((prod-cf-api-url))
      CF_USERNAME: ((prod-cf-deploy-username))
      CF_PASSWORD: ((prod-cf-deploy-password))
      CF_ORGANIZATION: ((prod-cf-organization))
      CF_SPACE: ((prod-cf-space))
      BROKER_NAME: ((prod-broker-name))
      AUTH_USER: ((prod-auth-user))
      AUTH_PASS: ((prod-auth-pass))
      SERVICES: >-
        aws-rds:micro-psql
        aws-rds:medium-psql
        aws-rds:medium-psql-redundant
        aws-rds:large-gp-psql
        aws-rds:large-gp-psql-redundant
        aws-rds:xlarge-gp-psql
        aws-rds:xlarge-gp-psql-redundant
        aws-rds:small-mysql
        aws-rds:medium-mysql
        aws-rds:medium-gp-mysql-redundant
        aws-rds:large-gp-mysql
        aws-rds:large-gp-mysql-redundant
        aws-rds:xlarge-gp-mysql
        aws-rds:xlarge-gp-mysql-redundant
        aws-rds:medium-mysql-redundant
        aws-rds:micro-psql-redundant
        aws-rds:small-mysql-redundant
        aws-rds:small-psql
        aws-rds:small-psql-redundant
        aws-rds:medium-oracle-se2
        aws-elasticache-redis:redis-dev
        aws-elasticache-redis:redis-3node
        aws-elasticache-redis:redis-5node
        aws-elasticache-redis:redis-3node-large
        aws-elasticache-redis:redis-5node-large
        aws-elasticsearch:es-dev
        aws-elasticsearch:es-medium
        aws-elasticsearch:es-medium-ha
        aws-elasticsearch:es-large
        aws-elasticsearch:es-large-ha
        aws-elasticsearch:es-xlarge
        aws-elasticsearch:es-xlarge-ha

  - task: update-broker-enterprise
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((prod-cf-api-url))
      CF_USERNAME: ((prod-cf-deploy-username))
      CF_PASSWORD: ((prod-cf-deploy-password))
      CF_ORGANIZATION: ((prod-cf-organization))
      CF_SPACE: ((prod-cf-space))
      BROKER_NAME: ((prod-broker-name))
      AUTH_USER: ((prod-auth-user))
      AUTH_PASS: ((prod-auth-pass))
      SERVICES: aws-rds:large-gp-sqlserver-se aws-rds:2xlarge-gp-psql-redundant aws-rds:2xlarge-gp-psql aws-rds:xlarge-gp-psql-m6 aws-rds:xlarge-gp-psql-m6-redundant
      SERVICE_ORGANIZATION: cloud-gov

  - task: update-broker-datagov
    file: pipeline-tasks/register-service-broker.yml
    params:
      CF_API_URL: ((prod-cf-api-url))
      CF_USERNAME: ((prod-cf-deploy-username))
      CF_PASSWORD: ((prod-cf-deploy-password))
      CF_ORGANIZATION: ((prod-cf-organization))
      CF_SPACE: ((prod-cf-space))
      BROKER_NAME: ((prod-broker-name))
      AUTH_USER: ((prod-auth-user))
      AUTH_PASS: ((prod-auth-pass))
      SERVICES: aws-rds:2xlarge-gp-psql-redundant aws-rds:2xlarge-gp-psql aws-rds:xlarge-gp-psql-m6 aws-rds:xlarge-gp-psql-m6-redundant
      SERVICE_ORGANIZATION: gsa-datagov

- name: acceptance-tests-prod
  plan:
  - in_parallel:
    - get: aws-broker-app
      passed: [deploy-aws-broker-prod]
      trigger: true
    - get: aws-db-test
  - in_parallel:
      steps:
      - task: smoke-tests-postgres
        file: aws-broker-app/ci/run-smoke-tests.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_PLAN: micro-psql
          DB_TYPE: postgres

      - task: smoke-tests-postgres-update-storage
        file: aws-broker-app/ci/run-smoke-tests-update-storage.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_PLAN: micro-psql
          DB_TYPE: postgres

      - task: smoke-tests-postgres-version
        file: aws-broker-app/ci/run-smoke-tests-db-version.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_PLAN: micro-psql
          DB_TYPE: postgres
          DB_VERSION: 11

      - task: smoke-tests-postgres-update-micro-to-small
        file: aws-broker-app/ci/run-smoke-tests-db-updates.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_PLAN: micro-psql
          NEW_SERVICE_PLAN: small-psql
          DB_TYPE: postgres

      - task: smoke-tests-mysql
        file: aws-broker-app/ci/run-smoke-tests.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_PLAN: small-mysql
          DB_TYPE: mysql

      - task: smoke-tests-mysql-update-storage
        file: aws-broker-app/ci/run-smoke-tests-update-storage.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_PLAN: small-mysql
          DB_TYPE: mysql

      - task: smoke-tests-mysql-version
        file: aws-broker-app/ci/run-smoke-tests-db-version.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_PLAN: small-mysql
          DB_TYPE: mysql
          DB_VERSION: 5.7

      - task: smoke-tests-mysql-update-small-to-medium
        file: aws-broker-app/ci/run-smoke-tests-db-updates.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_PLAN: small-mysql
          NEW_SERVICE_PLAN: medium-mysql
          DB_TYPE: mysql

      - task: smoke-tests-oracle
        file: aws-broker-app/ci/run-smoke-tests.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_PLAN: medium-oracle-se2
          DB_TYPE: oracle-se2

      - task: smoke-tests-redis
        file: aws-broker-app/ci/run-smoke-test-task.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_NAME: aws-elasticache-redis
          SERVICE_PLAN: redis-dev
          REGION: ((prod-aws-default-region))

      - task: smoke-tests-unbound-elasticsearch
        file: aws-broker-app/ci/run-smoke-test-unbound.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_NAME: aws-elasticsearch
          SERVICE_PLAN: es-dev
          REGION: ((prod-aws-default-region))

      - task: smoke-tests-elasticsearch
        file: aws-broker-app/ci/run-smoke-test-task.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_NAME: aws-elasticsearch
          SERVICE_PLAN: es-dev
          REGION: ((prod-aws-default-region))

      - task: smoke-tests-elasticsearch-advanced-options
        file: aws-broker-app/ci/run-smoke-test-es-advanced-options.yml
        params:
          BROKER_NAME: ((prod-broker-name))
          CF_API_URL: ((prod-cf-api-url))
          CF_USERNAME: ((prod-cf-deploy-username))
          CF_PASSWORD: ((prod-cf-deploy-password))
          CF_ORGANIZATION: ((prod-cf-organization))
          CF_SPACE: ((prod-cf-space))
          SERVICE_NAME: aws-elasticsearch
          SERVICE_PLAN: es-dev
          REGION: ((prod-aws-default-region))

  on_success:
    put: slack
    params:
      text: |
        :white_check_mark: Acceptance Tests for aws-broker on production PASSED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform-news'
      username: ((slack-username))
      icon_url: ((slack-icon-url))
  on_failure:
    put: slack
    params:
      text: |
        :x: Acceptance Tests for aws-broker on production FAILED
        <$ATC_EXTERNAL_URL/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
      channel: '#cg-platform'
      username: ((slack-username))
      icon_url: ((slack-icon-url))
      
resources:
- name: pipeline-tasks
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: ((pipeline-tasks-git-url))
    branch: ((pipeline-tasks-git-branch))

- name: aws-broker-app
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: ((aws-broker-url))
    branch: ((aws-broker-branch))

- name: aws-broker-app-development
  type: git
  source:
    commit_verification_keys: ((cloud-gov-pgp-keys))
    uri: ((aws-broker-url-development))
    branch: ((aws-broker-branch-development))

- name: aws-db-test
  type: git
  source:
    uri: ((aws-db-test-git-url))
    branch: ((aws-db-test-git-branch))
    commit_verification_keys: ((cloud-gov-pgp-keys))

- name: deploy-aws-broker-development
  type: cf
  source:
    api: ((development-cf-api-url))
    username: ((development-cf-deploy-username))
    password: ((development-cf-deploy-password))
    organization: ((development-cf-organization))
    space: ((development-cf-space))
    skip_cert_check: false

- name: deploy-aws-broker-staging
  type: cf
  source:
    api: ((staging-cf-api-url))
    username: ((staging-cf-deploy-username))
    password: ((staging-cf-deploy-password))
    organization: ((staging-cf-organization))
    space: ((staging-cf-space))
    skip_cert_check: false

- name: deploy-aws-broker-prod
  type: cf
  source:
    api: ((prod-cf-api-url))
    username: ((prod-cf-deploy-username))
    password: ((prod-cf-deploy-password))
    organization: ((prod-cf-organization))
    space: ((prod-cf-space))
    skip_cert_check: false

- name: slack
  type: slack-notification
  source:
    url: ((slack-webhook-url))

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: s3-iam
  type: docker-image
  source:
    repository: 18fgsa/s3-resource
